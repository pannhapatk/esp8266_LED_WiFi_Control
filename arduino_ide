ARDUINO IDE
INCLUDE LIBRARY ESP8266
http://arduino.esp8266.com/stable/package_esp8266com_index.json

USB 1 PCS.
LED RED 2 PCS.
HTML 

<pre class=\"highlight\"><code>
#include <ESP8266WiFi.h>
#include <WiFiClient.h>
#include <ESP8266WebServer.h>

/* Set these to your desired credentials. */
const char *ssid = "SSID";
const char *password = "PASSWORD";

ESP8266WebServer server(80);
int ledPin = 13;
int ledPin2 = 12;

/* Just a little test message.  Go to http://192.168.4.1 in a web browser
   connected to this access point to see it.
*/


String getHtmlPage(){
  String strHtml = "";
  strHtml += "<IDOCTYPE html><html>";
  strHtml += "<head> <meta http-equiv='refresh' content='3'/>";
  strHtml += "<meta name=\"viewport\" content =\"user-scalable=no,initial-scale=1,aximum-scale=1,";
  strHtml += "minimum-scale=1,width-device-width, height-device-height\">";
  strHtml += "<title>Controller</title>";
  strHtml += "</head><body><h1>Controller/webserver</h1>";
  strHtml += "<h3>LED/Switch:</h3>";
  strHtml += "<br>";
  strHtml += "<a href='/led1/on'>ON1</a><br><br><a href='/led1/off'>OFF1</a>";
  strHtml += "<br><br>";
  strHtml += "<a href='/led2/on'>ON2</a><br><br><a href='/led2/off'>OFF2</a>";
  strHtml += "</body></html>";
  return strHtml;
  
}

void handleRoot() {
  server.send(200, "text/html", getHtmlPage());
}

void turnOn1() {
  digitalWrite(ledPin, HIGH);
  Serial.println("now on");
  server.send(200, "text/html", getHtmlPage());
}
void turnOff1() {
  digitalWrite(ledPin, LOW);
  Serial.println("now Off");
  server.send(200, "text/html", getHtmlPage());
}
void turnOn2() {
  digitalWrite(ledPin2, HIGH);
  Serial.println("now on");
  server.send(200, "text/html", getHtmlPage());
}
void turnOff2() {
  digitalWrite(ledPin2, LOW);
  Serial.println("now Off");
  server.send(200, "text/html", getHtmlPage());
}





void setup() {
  Serial.begin(115200);
  delay(1000);

  pinMode(ledPin,OUTPUT);
  digitalWrite(ledPin,LOW);
  
  pinMode(ledPin2,OUTPUT);
  digitalWrite(ledPin2,LOW);


  
  Serial.println();
  Serial.print("Configuring access point...");
  /* You can remove the password parameter if you want the AP to be open. */
  WiFi.softAP(ssid, password);

  IPAddress myIP = WiFi.softAPIP();
  Serial.print("AP IP address: ");
  Serial.println(myIP);
  server.on("/",handleRoot);
  server.on("/led1/on",turnOn1);
  server.on("/led1/off",turnOff1);
  
  server.on("/led2/on",turnOn2);
  server.on("/led2/off",turnOff2);
  server.begin();
  Serial.println("HTTP server started");
  
  
  
}

void loop() {
  server.handleClient();
}
# </code></pre>\n"
